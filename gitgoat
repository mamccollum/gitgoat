#!/bin/sh

# Git ID
# $Git$

# store $@ into argv
argv=$@

gg_p() {
	# populate
	# for each file in $argv, except the first two
	for file in ${argv[@]:2}
	do
		idcontent="$(git log -n 1 --pretty=format:%H -- "$file" | tr -d '\n' && git ls-files --full-name -s "$file" | tr -d '\n')"

		sed -e "s|\\$\Git.*\\$|\\$\Git: $idcontent \\$|g" -i '' "$file"
	done
}

gg_s() {
	# strip
	# for each file in $argv, except the first two
	for file in ${argv[@]:2}
	do
		sed -e "s|\\$\Git.*\\$|\\$\Git\\$|g" -i '' "$file"
	done
}

gg_a() {
	# archive as tar/gz after populating
	# for each file in `git ls-files --full-name`, except the first two
	for file in $(git ls-files --full-name); do
		idcontent="$(git log -n 1 --pretty=format:%H -- "$file" | tr -d '\n' && git ls-files --full-name -s "$file" | tr -d '\n')"

		sed -e "s|\\$\Git.*\\$|\\$\Git: $idcontent \\$|g" -i '' "$file"
	done
	# mktemp -d then copy $(git ls-files --full-name) into it
	tmpdir=$(mktemp -d)
	mkdir -p $tmpdir/$(basename $(git rev-parse --show-toplevel))
	# mkdir for loop using dirname (create subdir with name of repo)
	for file in $(git ls-files --full-name); do
		mkdir -p $tmpdir/$(basename $(git rev-parse --show-toplevel))/$(dirname $file)
		cp $(git rev-parse --show-toplevel)/$file $tmpdir/$(basename $(git rev-parse --show-toplevel))/$file
	done

	tar -czvf $(basename $(git rev-parse --show-toplevel).tar.gz) -C $tmpdir .
	rm -rf $tmpdir
}

# parse args
case $1 in
	-p)
		gg_p
		;;
	-s)
		gg_s
		;;
	-a)
		gg_a
		;;
	*)
		echo "Usage: gitgoat [-p|-s|-a] [file1] [file2] ..."
		;;
esac

# end of file